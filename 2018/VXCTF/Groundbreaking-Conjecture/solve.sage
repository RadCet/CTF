c = """
1324213961120907016009488235457909201224004617640
27968422917311290778357050935221364348533151995115648
84969167552156211297643717405741751660876870684657166
01643481728717715788307742304005360323863110558437145
99747573031334608706728606264170991916430250349356680
64578404978788705845391532435819992779232701823750918
03756937177489871126773529184324491609795324252881058
95128494797856259138834279067479651253601538738294433
13891896937560098235281859702519765346269650524286573
90910900840832755536784624663584953482525034465087235
92837661729335006961502073289804206114924022246755727
86330992952497093559466521578204786443
"""

n = """
2908317524674531164736667495862423158395665177960
02045378088780498319597827826773290463899036436073050
84363669456031635681665339344634660504548967557939814
20518080684667218041545397426460057506773570219144928
72687679557050988191678042596910925865150460653736318
50651094217062353194386788336809512816660709562261660
32045937836549709130698344969385779163474250414901664
96416412455051089276716023414355479984645365121112036
49319239100718228762977465268685127022023218477700176
04885830134942254039683988712806104289136028812137461
98746826160149126382724522941432831971086287385818909
95744256157781481614121607468423487057
"""

e = 65537

p = """
1656388136501304881712111125759188967729697445421
47535063183572446064312100882265532535667484534965205
41927562990523255658552393229483216130158280800306871
20725978796416857535395264280315247181907834081700451
"""

def text2number(text):
    text = text.strip().replace('\n', '')
    return int(text)

c = text2number(c)
n = text2number(n)
p = text2number(p)

pL = len(str(p))
pN = len(str(n))

for L in range(pL, pN):
    pbar = p * (10 ^ (L - pL))

    P.<x> = PolynomialRing(Zmod(n))
    f = x - pbar

    roots = f.small_roots(X = 10 ^ (L - pL), beta = 0.4)
    if len(roots) > 0:
        root = roots[0]
        p = int(pbar - root)
        q = n // p
        r = (p - 1) * (q - 1)
        d = inverse_mod(e, r)
        m = pow(c, d, n)
        print hex(int(m))[2:-1].decode('hex')
        break
